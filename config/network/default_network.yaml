prefix: "0fx"

# The following options define the port numbers to start incrementing from.
# E.g. for a network of 3 validator nodes, and a base_port_peer of 60000,
# the resulting peer ports exposed on the network would be:
# validator_0 -> 60000
# validator_1 -> 60001
# validator_2 -> 60002

# base_port_peer -> the node's peer starting port
base_port_peer: 60000
# base_port_ws -> the node's Websocket API starting port
base_port_ws: 61000
# base_port_ws_admin -> the node's Websocket API (with admin methods) starting port
base_port_ws_admin: 62000
# base_port_rpc -> the node's JSON RPC starting port
base_port_rpc: 63000

# The number of validator nodes to configure and start
number_of_nodes: 7
number_of_byzantine_nodes: 1

# A 2-dimensional array containing the groups of node indices that should be connected
# to each other. Some examples for 3 nodes:
# [[0, 1, 2]] -> base config, all nodes in the same group and thus fully connected
# [[0, 1], [1, 2]] -> 1 partition, node 0 <-> node 1 | node 1 <-> node 2 | node 0 <-X-> node 2
# In the latter situation, all nodes have a direct connection except node 0 and node 2.
#
# Leaving this empty means all nodes in the network will be connected.
network_partition: []

# A 2-dimensional array containing directional groups of node indices that should trust each other.
# These nodes will be placed in each others UNL (Unique Node List).
# E.g. a group consisting of [0, 1, 2], means node 0 (first entry) will trust node 1 & 2, but
# node 1 & 2 do not necessarily trust node 0. Some examples:
# [[0, 1, 2], [1, 0, 2], [2, 0, 1]] -> All 3 nodes trust each other.
# [[1, 0, 2], [2, 0, 1]] -> Node 1 and 2 trust all others, but node 0 trusts no one.
#
# Leaving this empty means all nodes in the network will trust each other.
unl_partition:
  - [0, 1, 2, 3, 4]
  - [1, 0, 2, 3, 4]
  - [2, 0, 1, 3, 4]
  - [3, 1, 2, 4, 5]
  - [4, 2, 3, 5, 6]
  - [5, 2, 3, 4, 6]
  - [6, 2, 3, 4, 5]
# Transaction configuration
transactions:
  # Genesis transactions are performed immediately after network start.
  # Should be used to set up the accounts.
  genesis:
    - peer_id: 1 # The node to submit the transaction to
      amount: 100001000000 # Amount in XRP drops, minimum is 10.000.000
      sender_account: None # Account alias to send the transaction from. None is genesis account
      destination_account: "Account1" # Account alias to send the transaction to.
    - peer_id: 1
      amount: 100001000000 # When creating a new account, send at least 10XRP + fee
      sender_account: None
      destination_account: "Account2"
    - peer_id: 1
      amount: 100001000000
      sender_account: None
      destination_account: "Account3"

  # Regular transactions are performed a set amount of time after the network has started.
  regular:
    - peer_id: 0 # The node to submit the transaction to
      amount: 80000000000 # Amount in XRP drops, minimum is 1.000.000.000.
      sender_account: "Account1" # Account alias to send the transaction from.
      destination_account: "Account2" # Account alias to send the transaction to.
      time: 2 # Seconds after which the transaction is performed.
    - peer_id: 1 # The node to submit the transaction to
      amount: 81000000000 # Amount in XRP drops, minimum is 1.000.000.000.
      sender_account: "Account1" # Account alias to send the transaction from.
      destination_account: "Account3" # Account alias to send the transaction to.
      time: 2 # Seconds after which the transaction is performed.
    - peer_id: 5
      amount: 82000000000
      sender_account: "Account1"
      destination_account: "Account3"
      time: 2
    - peer_id: 6
      amount: 83000000000
      sender_account: "Account1"
      destination_account: "Account2"
      time: 2
